/*
* @(#)AcidMatrix.java	0.9 97/07/22
* 
* Copyright (©) 1997-2006, Tore Eriksson, Gšran Sperber. All Rights Reserved.
*/

/**
*   For RetroTector 1.0
*
* @author  Tore Eriksson & Gšran Sperber
* @version 18/9 -06
* Beautified 18/9 -06
*/

package retrotector;

/**
* Similarity matrix of codons.
*/
public final class AcidMatrix extends Matrix {

/**
* Creates a new Matrix.acidMATRIX if its present CONSERVEDFACTOR different from newCFactor.
* @param	newCFactor	New value for CONSERVEDFACTOR.
* @return	The new Matrix.acidMATRIX.
*/
  public final static AcidMatrix refreshAcidMatrix(float newCFactor) {
    if ((Matrix.acidMATRIX == null) || (Matrix.acidMATRIX.CONSERVEDFACTOR != newCFactor)) {
      Matrix.acidMATRIX = new AcidMatrix(newCFactor);
    }
    return Matrix.acidMATRIX;
  } // end of refreshAcidMatrix(float)
  
/**
* @param	pattern						A byte[ ] to evaluate similarity with in
* @param	targetString			at position
* @param	posInTarget
* @param	cfact							Bonus for conserved position.
* @param	stopscoreInString	Score when encountering stop codon in targetString.
* @return	Resulting score
*/
	public final static float scoreInAcidString(byte[ ] pattern, String targetString, int posInTarget, float cfact, float stopscoreInString) {
    float sum = 0;
		char c;
		char d;
		Compactor ACIDCOMPACTOR = Compactor.ACIDCOMPACTOR;
    
    AcidMatrix acidMatrix = refreshAcidMatrix(cfact);
		int ii;
		
    for (int i=0; i<pattern.length; i++) {
			if (pattern[i] >= 0) {
				ii = i + posInTarget;
				if ((ii >= 0) & (ii < targetString.length())) {
					c = Character.toLowerCase(targetString.charAt(ii));
					if (c == ACIDCOMPACTOR.STOPCHAR) {
						sum += stopscoreInString;
					} else {
						try {
							sum += acidMatrix.floatMatrix[pattern[i]][ACIDCOMPACTOR.charToIntId(c)];
						} catch (ArrayIndexOutOfBoundsException ae) {
							throw ae;
						}
					}
				}
			}
    }
    return sum;
	} // end of scoreAcidString(byte[ ], String, int, float, float)
	
	
/* Symmetric 64x64 matrix of similarity between codon codes. */
  private static final byte[ ][ ] SCOREMATRIX = {
{9, 9, 4, 4, 1, 1, 1, 1, 1, 1, 3, 0, 7, 7, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
{9, 9, 4, 4, 1, 1, 1, 1, 1, 1, 3, 0, 7, 7, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
{4, 4, 9, 9, 2, 2, 2, 2, 0, 0, 2, 0, 3, 3, 0, 0, 9, 9, 9, 9, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0},
{4, 4, 9, 9, 2, 2, 2, 2, 0, 0, 2, 0, 3, 3, 0, 0, 9, 9, 9, 9, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0},
{1, 1, 2, 2, 9, 9, 9, 9, 3, 3, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 3, 3, 4, 4, 3, 3, 0},
{1, 1, 2, 2, 9, 9, 9, 9, 3, 3, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 3, 3, 4, 4, 3, 3, 0},
{1, 1, 2, 2, 9, 9, 9, 9, 3, 3, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 3, 3, 4, 4, 3, 3, 0},
{1, 1, 2, 2, 9, 9, 9, 9, 3, 3, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 3, 3, 4, 4, 3, 3, 0},
{1, 1, 0, 0, 3, 3, 3, 3, 9, 9, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 3, 3, 1, 1, 1, 1, 0, 0, 0},
{1, 1, 0, 0, 3, 3, 3, 3, 9, 9, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 3, 3, 1, 1, 1, 1, 0, 0, 0},
{3, 3, 2, 2, 2, 2, 2, 2, 0, 0, 9, 0, 3, 3, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 5, 5, 5, 5, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2, 5, 5, 1, 1, 1, 1, 0},
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{7, 7, 3, 3, 2, 2, 2, 2, 3, 3, 3, 0, 9, 9, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 0},
{7, 7, 3, 3, 2, 2, 2, 2, 3, 3, 3, 0, 9, 9, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 0},
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{4, 4, 9, 9, 2, 2, 2, 2, 0, 0, 2, 0, 3, 3, 0, 0, 9, 9, 9, 9, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0},
{4, 4, 9, 9, 2, 2, 2, 2, 0, 0, 2, 0, 3, 3, 0, 0, 9, 9, 9, 9, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0},
{4, 4, 9, 9, 2, 2, 2, 2, 0, 0, 2, 0, 3, 3, 0, 0, 9, 9, 9, 9, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0},
{4, 4, 9, 9, 2, 2, 2, 2, 0, 0, 2, 0, 3, 3, 0, 0, 9, 9, 9, 9, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0},
{0, 0, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 9, 9, 9, 9, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 0},
{0, 0, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 9, 9, 9, 9, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 0},
{0, 0, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 9, 9, 9, 9, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 0},
{0, 0, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 9, 9, 9, 9, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 0},
{1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 5, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 5, 5, 0},
{1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 5, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 5, 5, 0},
{1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 5, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 5, 5, 0},
{1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 5, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 5, 5, 0},
{2, 2, 2, 2, 3, 3, 3, 3, 1, 1, 2, 0, 3, 3, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 9, 9, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 3, 3, 0},
{2, 2, 2, 2, 3, 3, 3, 3, 1, 1, 2, 0, 3, 3, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 9, 9, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 3, 3, 0},
{0, 0, 2, 2, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 9, 9, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 5, 5, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 0},
{0, 0, 2, 2, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 9, 9, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 5, 5, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 0},
{2, 2, 4, 4, 3, 3, 3, 3, 2, 2, 0, 0, 2, 2, 0, 0, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 4, 5, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0},
{2, 2, 4, 4, 3, 3, 3, 3, 2, 2, 0, 0, 2, 2, 0, 0, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 4, 5, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0},
{2, 2, 4, 4, 3, 3, 3, 3, 2, 2, 0, 0, 2, 2, 0, 0, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 4, 5, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0},
{2, 2, 4, 4, 3, 3, 3, 3, 2, 2, 0, 0, 2, 2, 0, 0, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 4, 5, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 0},
{1, 1, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 2, 2, 3, 3, 2, 2, 0},
{1, 1, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 2, 2, 3, 3, 2, 2, 0},
{1, 1, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 2, 2, 3, 3, 2, 2, 0},
{1, 1, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 2, 2, 3, 3, 2, 2, 0},
{0, 0, 1, 1, 4, 4, 4, 4, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 9, 9, 4, 4, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 2, 2, 3, 3, 2, 2, 0},
{0, 0, 1, 1, 4, 4, 4, 4, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 9, 9, 4, 4, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 2, 2, 3, 3, 2, 2, 0},
{0, 0, 1, 1, 4, 4, 4, 4, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 9, 9, 4, 4, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 2, 2, 3, 3, 2, 2, 0},
{0, 0, 1, 1, 4, 4, 4, 4, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 9, 9, 4, 4, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 2, 2, 3, 3, 2, 2, 0},
{0, 0, 1, 1, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 9, 9, 5, 5, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 4, 4, 3, 3, 0},
{0, 0, 1, 1, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 9, 9, 5, 5, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 4, 4, 3, 3, 0},
{0, 0, 1, 1, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 5, 5, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 9, 9, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 0},
{0, 0, 1, 1, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 5, 5, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 9, 9, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 0},
{4, 4, 5, 5, 2, 2, 2, 2, 2, 2, 0, 0, 3, 3, 0, 0, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 5, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 0},
{4, 4, 5, 5, 2, 2, 2, 2, 2, 2, 0, 0, 3, 3, 0, 0, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 5, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 0},
{3, 3, 5, 5, 2, 2, 2, 2, 0, 0, 1, 0, 2, 2, 0, 0, 5, 5, 5, 5, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 9, 5, 3, 3, 3, 3, 2, 2, 3, 3, 2, 2, 3, 3, 0},
{4, 4, 5, 5, 2, 2, 2, 2, 2, 2, 0, 0, 3, 3, 0, 0, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 5, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 0},
{1, 1, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 3, 3, 3, 3, 3, 3, 0},
{1, 1, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 3, 3, 3, 3, 3, 3, 0},
{1, 1, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 3, 3, 3, 3, 3, 3, 0},
{1, 1, 2, 2, 4, 4, 4, 4, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 3, 3, 3, 3, 3, 3, 0},
{1, 1, 2, 2, 9, 9, 9, 9, 3, 3, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 3, 3, 4, 4, 3, 3, 0},
{1, 1, 2, 2, 9, 9, 9, 9, 3, 3, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 9, 9, 3, 3, 4, 4, 3, 3, 0},
{1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 5, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 5, 5, 0},
{1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 5, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 9, 9, 9, 9, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 5, 5, 0},
{1, 1, 1, 1, 4, 4, 4, 4, 1, 1, 1, 0, 2, 2, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 9, 9, 4, 4, 0},
{1, 1, 1, 1, 4, 4, 4, 4, 1, 1, 1, 0, 2, 2, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 9, 9, 4, 4, 0},
{0, 0, 1, 1, 3, 3, 3, 3, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 5, 5, 5, 5, 3, 3, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 5, 5, 4, 4, 9, 9, 0},
{0, 0, 1, 1, 3, 3, 3, 3, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 5, 5, 5, 5, 3, 3, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 5, 5, 4, 4, 9, 9, 0}
};

/**
* Score assigned to indefinite acid (n) = 0.
*/
  public static final float INDEFINITESCORE = 0.0f;

/**
* Bonus factor for conserved acid (uppercase in Motif string).
*/
  public final float CONSERVEDFACTOR;

/**
* Highest value encountered in SCOREMATRIX.
*/
	public final float MAXACIDSCORE;

/**
* Constructor. Only accessible through refreshAcidMatrix.
*/
  private AcidMatrix(float cfac) {
		CONSERVEDFACTOR = cfac;
// 64 normal and 64 conserved codons x 64 ordinary codons and indefinite codon.
		floatMatrix = new float[128][65];
		int maxs = Integer.MIN_VALUE; 
		for (int x=0; x<64; x++) {
			for (int y=0; y<64; y++) {
				maxs = Math.max(maxs, SCOREMATRIX[x][y]);
				floatMatrix[x][y] = SCOREMATRIX[x][y] * 1.0f;
				floatMatrix[x + 64][y] = SCOREMATRIX[x][y] * CONSERVEDFACTOR;
			}
			floatMatrix[x][64] = INDEFINITESCORE;
			floatMatrix[x + 64][64] = INDEFINITESCORE;
		}
		MAXACIDSCORE = maxs;
  } // end of constructor(float)

}


/*
* Copyright (©) 2000-2006, Gšran Sperber. All Rights Reserved.
*/

/**
*   For RetroTector 1.0
*
* @author  Gšran Sperber
* @version 30/9 -06
* Beautified 30/9 -06
*/
package builtins;

import retrotector.*;
import java.util.*;

/**
* Broom to detect LINE L1 fragments.
*<PRE>
*     Parameters:
*
*   BroomPriority
* Tolerance relative to other Brooms
* Default: 0.
*
*   MerSize
* Length of sequence for initial search.
* Default: 17.
*
*   MerStep
* Step by which sequence for initial search is moved.
* Default: 23.
*
*   Tolerance
* Error tolerance in dynamic programming.
* Default: 10.
*</PRE>
*/
public class L1Broom extends StandardBroom {

/**
* To use instead of super.tolerance	to allow SweepDNA to set it.
*/
	private static float statolerance;

/**
* @param		tol	Value for tolerance.
*/
	public final static void setTolerance(float tol) {
		statolerance = tol;
	} // end of setTolerance(float)
	
	
// prototype sequence
	private String l1 = "gggggaggagccaagatggccgaataggaacagctccggtctacagctcccagcgtgagcgacgcagaagacgggtgatttctgcatttccaactgaggtaccaggttcatctcactggggagtgccagacagtgggcgcaggacagtgggtgcagcgcaccgtgcgtgagccgaagcagggcgaggcatcgcctcacccgggaagcgcaaggggtcagggaattccctttcctagtcaaagaaaggggtgacagacggcacctggaaaatcgggtcactcccgccctaatactgcgcttttccgacgggcttaaaaaacggcgcaccaggagattatatcccgcacctggctcggagggtcctacgcccacggagtctcgctgattgctagcacagcagtccgagatcaaactgcaaggcggcagcgaggctgggggaggggcgcccgccattgcccaggcttgattaggtaaacaaagcggccgggaagctcgaactgggtggagcccaccacagctcaaggaggcctgcctgcctctgtaggctccacctctgggggcagggcacagacaaacaaaaagacagcagtaacctctgcagacttaaatgtccctgtctgacagctttgaagagagcagtggttctcccagcacgcagcttcagatctgagaacgggcagactgcctcctcaagtgggtccctgacccccgagtagcctaactgggaggcaccccccagtaggggcggactgacacctcacacggccgggtactcctctgagacaaaacttccagaggaacgatcaggcagcagcatctgcggttcaccaatatccactgttctgcagccaccgctgctgatacccaggcaaacagggtctggagtggacctccagcaaactccaacagacctgcagctgagggtcctgtctgttagaaggaaaactaacaaacagaaaggacatccacaccaaaaacccatctgtacgtcaccatcatcaaagaccaaaggtagataaaaccacaaagatggggaaaaaacagagcagaaaaactggaaactctaaaaatcagagcgcctctccttctccaaaggaacgcagctcctcaccagcaacggaacaaagctggacggagaatgactttgacgagttgagagaagaaggcttcagacgatcaaactactccgagctacgggaggaaattcgaaccaacggcaaagaagttaaaaactttgaaaaaaaattagatgaatggataactagaataaccaatgcagagaagtccttaaaggacctgatggagctgaaaaccaaggcacgagaactacgtgacgaatgcagaagcctcagtagccgatgcgatcaactggaagaaagggtatcagtgacggaagatgaaatgaatgaaatgaagcgagaagagaagtttagagaaaaaagaataaaaagaaacgaacaaagcctccaagaaatatgggactatgtgaaaagaccaaatctgcgtctgattggtgtacctgaaagtgacggggagaatggaaccaagttggaaaacactctgcaggatattatccaggagaacttccccaatctagcaaggcaggccaacgttcagattcaggaaatacagagaacgccacaaagatactcctcgagaagagcaactccaagacacataattgtcagattcaccaaagttgaaatgaaggaaaaaatgttaagggcagccagagagaaaggtcgggttacccacaaagggaagcccatcagactaacggctgatctctcggcagaaactctacaagccagaagagagtgggggccaatattcaacattcttaaagaaaagaattttcgacccagaatttcatatccagccaaactaagcttcataagcgaaggagaaataaaatactttacagacaagcaaatgctgagagattttgtcaccaccaggcctgccctaaaagagctcctgaaggaagcgctaaacatggaaaggaacaaccagtaccagccgctgcaaaaacatgccaaattgtaaagaccatcaaggctaggaagaaactgcatcaactaacgagcaaaataaccagctaacgtcataatgacaggatcaaattcacacataacaatattaactttaaatgtaaatgggctaaatgctccaattaaaagacacagactggcaaattggataaagagtcaagacccatcagtgtgccgtattcaggaaacccatctcacgtgcagagacacacataggctcgaaataaaaggatggaggaagatctaccaagcaaatggaaaacaaaaaaaggcaggggttgcaatcctagtctctgataaaacagattttaaaccaacaaagatcaaaagagacaaagaaggccattacataatggtaaagggatcaattcaacaagaagagctaactatcctaaatatatatgcacccaatacaggagcacccagattcataaagcaagtcctgagtgacctacaaagagacttagactcccacacaataataatgggagactttaacaccccactgtcaacattagacagatcaacgagacagaaagttaacaaggatacccaggaattgaactcagctctgcaccaagcggacctaatagacatctacagaactctccaccccaaatcaacagaatatacattcttttcagcaccacaccacacctattccaaaattgaccacatagttggaagtaaagctctcctcagcaaatgtaaaagaacagaaattataacaaactgtctctcagaccacagtgcaatcaaactagaactcaggattaagaaactcactcaaaaccgctcaactacatggaaactgaacaacctgctcctgaatgactactgggtacataacgaaatgaaggcagaaataaagatgttctttgaaaccaacgagaacaaagacacaacataccagaatctctgggacacattcaaagcagtgtgtagagggaaatttatagcactaaatgcccacaagagaaagcaggaaagatctaaaattgacaccctaacatcacaattaaaagaactagaaaagcaagagcaaacacattcaaaagctagcagaaggcaagaaataactaaaatcagagcagaactgaaggaaatagagacacaaaaaacccttcaaaaaattaatgaatccaggagctggttttttgaaaagatcaacaaaattgatagaccgctagcaagactaataaagaagaaaagagagaagaatcaaatagacgcaataaaaaatgatacaggggatatcaccaccgatcccacagaaatacaaactaccgtcagagaatactataaacacctctacgcaaataaactagaaaatctagaagaaatggataaattcctcgacacgtacactctcccaagactaaaccaggaagaagttgaatctctgaatagaccaataacaggctctgaaattgaggcaataatcaatagcttaccaaccaaaaaaagtccgggaccagatggattcacagccgaattctaccagaggtacaaggaggagctggtaccattccttctgaaactattccaatcaatagaaaaagagggaatcctccctaactcattttatgaggccagcatcatcctgataccaaagcctggcagagacacaacaaaaaaagagaattttagaccaatatccttgatgaacatcgatgcaaaaatcctcaataaaatactggcaaaccgaatccagcagcacatcaaaaagcttatccaccatgatcaagtgggcttcatccctgggatgcaaggctggttcaacatacgcaaatcaataaacgtaatccagcatataaacagaaccaaagacaaaaaccacatgattatctcaatagatgcagaaaaggcctttgacaaaattcaacaacgcttcatgctaaaaactctcaataaattaggtattgatgggacgtatctcaaaataataagagctatctatgacaaacccacagccaatatcatactgaatgggcaaaaactggaagcattccctttgaaaactggcacaagacagggatgccctctctcaccactcctattcaacatagtgttggaagttctggccagggcaatcaggcaggagaaggaaataaagggtattcaattaggaaaagaggaagtcaaattgtccctgtttgcagatgacatgattgtatatctagaaaaccccatcgtctcagcccaaaatctccttaagctgataagcaacttcagcaaagtctcaggatacaaaatcaatgtgcaaaaatcacaagcattcttatacaccaataacagacaaacagagagccaaatcatgagtgaactcccattcacaattgcttcaaagagaataaaatacctaggaatccaacttacaagggatgtgaaggacctcttcaaggagaactacaaaccactgctcaatgaaataaaagaggatacaaacaaatggaagaacattccatgctcatgggtaggaagaatcaatatcgtgaaaatggccatactgcccaaggtaatttatagattcaatgccatccccatcaagctaccaatgactttcttcacagaattggaaaaaactactttaaagttcatatggaaccaaaaaagagcccacatcgccaagtcaatcctaagccaaaagaacaaagctggaggcatcacgctacctgacttcaaactatactacaaggctacggtaaccaaaacagcatggtactggtaccaaaacagagatatagaccaatggaacagaacagagccctcagaaataatgccgcatatctacaactatccgatctttgacaaacctgagaaaaacaagcaatggggaaaggattccctatttaataaatggtgctgggaaaactggctagccatatgtagaaagctgaaactggatcccttccttacaccttatacaaaaattaattcaagatggattaaagacttaaacgttagacctaaaaccataaaaaccctagaagaaaacctaggcaataccattcaggacataggcatgggcaaggacttcatgtctaaaacaccaaaagcaatggcaacaaaagccaaaattgacaaacgggatctaattaaactaaagagcttctgcacagcaaaagaaactaccatcagagtgaacaggcaacctacaaaatgggagaaaatttttgcaacctactcatctgacaaagggctaatatccagaatctacaatgaactcaaacaaatttacaagaaaaaaacaaacaaccccatcaaaaagtgggcaaaggatatgaacagacacttctcaaaagaagacatttatgcagccaaaaaacacatgaaaaaatgctcatcatca";

/**
* Constructor.
*/
	public L1Broom() {
		parameters = new Hashtable();
		getDefaults();
		broomPriority = getFloat(BROOMPRIORITYKEY, 0.0f);
		merSize = getInt(MERSIZEKEY, 17);
		merStep = getInt(MERSTEPKEY, 23);
		tolerance = getFloat(TOLERANCEKEY, 10.0f);
		statolerance = tolerance;
	} // end of constructor()
	
/**
* @return	Error tolerance in dynamic programming.
*/
	public final float getTolerance() {
		return statolerance;
	} // end of getTolerance()
	
/**
* @return	Name base for finds in primary strand.
*/
	public final String getDirtName() {
		return "L1";
	} // end of getDirtName()
	
/**
* @return	Name base for finds in complementary strand.
*/
	public final String getCDirtName() {
		return "CL1";
	} // end of getCDirtName()
	
/**
* @return	Sequence of prototype.
*/
	public final String dirtString() {
		return l1;
	} // end of  dirtString() 
	
}
